from aiogram import types
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder


def create_keyboard(name_buttons: list | dict, *sizes: int) -> types.InlineKeyboardMarkup:
    keyboard = InlineKeyboardBuilder()

    for name_button in name_buttons:
        if type(name_buttons[name_button]) is tuple:
            if len(name_buttons[name_button]) == 2:
                keyboard.button(
                    text=name_button, url=name_buttons[name_button][0], callback_data=name_buttons[name_button][1]
                )
            else:
                if "http" in name_buttons[name_button]:
                    keyboard.button(
                        text=name_button, url=name_button
                    )
                keyboard.button(
                    text=name_button, callback_data=name_button
                )

        else:

            if "http" in str(name_buttons[name_button]):
                keyboard.button(
                    text=name_button, url=name_buttons[name_button]
                )
            else:
                keyboard.button(
                    text=name_button, callback_data=name_buttons[name_button]
                )
    if len(sizes) == 0:
        sizes = (1,)
    keyboard.adjust(*sizes)
    return keyboard.as_markup(resize_keyboard=True, one_time_keyboard=True)


def create_reply_keyboard(name_buttons: list, one_time_keyboard: bool = False, *sizes) -> types.ReplyKeyboardMarkup:
    keyboard = ReplyKeyboardBuilder()

    for name_button in name_buttons:
        if name_button is not tuple:
            keyboard.button(
                text=name_button
            )
        else:
            keyboard.button(
                text=name_button,

            )
    if len(sizes) == 0:
        sizes = (1,)
    keyboard.adjust(*sizes)
    return keyboard.as_markup(resize_keyboard=True, one_time_keyboard=one_time_keyboard)


name_button_main_keyboard = ["–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π —Å—á–µ—Ç", "–ü–æ–¥–¥–µ—Ä–∂–∫–∞", "–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", "–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã",
                             "–ü—Ä–æ–º–æ–∫–æ–¥—ã"]

main_keyboard = create_reply_keyboard(name_button_main_keyboard, False, 1, 2, 2)
back_keyboard = create_reply_keyboard(["–ù–∞–∑–∞–¥"])

keyboard_by_invest = create_reply_keyboard(["–ù–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç", "–ú–æ–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã",
                                            "üîë–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", "‚Ü©Ô∏è–í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞", "–ù–∞–∑–∞–¥"],
                                           True, 2, 2, 1)

statistics_referral_name_button = {
    "–ü–æ–∫–∞–∑–∞—Ç—å 1-—ã–π —É—Ä–æ–≤–µ–Ω—å": "watch_1_lvl",
    "–ü–æ–∫–∞–∑–∞—Ç—å 2-—ã–π —É—Ä–æ–≤–µ–Ω—å": "watch_2_lvl",
    "–ü–æ–∫–∞–∑–∞—Ç—å 3-—ã–π —É—Ä–æ–≤–µ–Ω—å": "watch_3_lvl"
}
statistics_referral_keyboard = create_keyboard(statistics_referral_name_button)

back_to_ref_keyboard = create_keyboard({"–ù–∞–∑–∞–¥": "back"})

payment_method_name_button = {
    "Bitcoin": "Bitcoin",
    "USDT-TRC20": "USDT",
    "Ethereum ERC-20": "Ethereum",
    "YMoney": "YMoney",
    "–í —Ä—É—á–Ω–æ–º —Ä–µ–∂–∏–º–µ": "–í —Ä—É—á–Ω–æ–º —Ä–µ–∂–∏–º–µ",
    "–ù–∞–∑–∞–¥": "back_profile"
}
payment_method_keyboard = create_keyboard(payment_method_name_button)

back_to_main_keyboard = create_keyboard({"–ù–∞–∑–∞–¥": "back_main"})

delete_notification_keyboard = create_keyboard({"–°–∫—Ä—ã—Ç—å": "delete_notification"})

back_to_choice_payment = create_keyboard({"–ù–∞–∑–∞–¥": "choice_payment_method"})

back_to_profile_keyboard = create_keyboard({"–ù–∞–∑–∞–¥": "back_profile"})

replenishment_in_manual_mode_keyboard = create_keyboard(
    {"–ì–æ—Ç–æ–≤–æ": "ready_transaction", "–ù–∞–∑–∞–¥": "choice_payment_method"})

ymoney_keyboard = create_keyboard(
    {"–ì–æ—Ç–æ–≤–æ": "ready_ymoney", "–ù–∞–∑–∞–¥": "choice_payment_method"})

name_button_count_day = {
                        "30 –¥–Ω–µ–π": "30",
                        "60 –¥–Ω–µ–π": "60",
                        "90 –¥–Ω–µ–π": "90",
                        "–ù–∞–∑–∞–¥": "back_profile"
                         }
count_day_keyboard = create_keyboard(name_button_count_day)

name_button_deposit_contract = {
    "10$": "10",
    "100$": "100",
    "1000$": "1000",
    "3000$": "3000",
    "5000$": "5000",
    "10000$": "10000",
    "–ù–∞–∑–∞–¥": "back_to_choice_count_day"
}
deposit_contract_keyboard = create_keyboard(name_button_deposit_contract, 2, 2, 2, 1)

confirm_deposit_keyboard = create_keyboard({'‚úÖ –ó–∞–∫–ª—é—á–∏—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç': "confirm_contract", "–û—Ç–º–µ–Ω–∏—Ç—å": "back_profile"})


if __name__ == "__main__":
    print(payment_method_name_button.values())
